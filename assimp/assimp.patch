Index: code/CMakeLists.txt
===================================================================
--- code/CMakeLists.txt	(revision 811)
+++ code/CMakeLists.txt	(working copy)
@@ -742,6 +742,8 @@
 	SOVERSION ${LIBRARY_SOVERSION}
 )
 
+target_link_libraries(assimp ${boost_libraries})
+
 INSTALL( TARGETS assimp DESTINATION ${LIB_INSTALL_DIR} )
 INSTALL( FILES ${PUBLIC_HEADERS} DESTINATION ${INCLUDE_INSTALL_DIR}/assimp )
 INSTALL( FILES ${COMPILER_HEADERS} DESTINATION ${INCLUDE_INSTALL_DIR}/assimp/Compiler )
Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt	(revision 811)
+++ CMakeLists.txt	(working copy)
@@ -25,26 +25,21 @@
 CONFIGURE_FILE( "${CMAKE_SOURCE_DIR}/assimp.pc.in" "${CMAKE_BINARY_DIR}/assimp.pc" @ONLY )
 INSTALL( FILES "${CMAKE_BINARY_DIR}/assimp.pc" DESTINATION ${LIB_INSTALL_DIR}/pkgconfig/ )
 
-# Globally enbale Boost resp. the Boost workaround â€“ it is also needed by the
-# tools which include the Assimp headers.
-IF ( ENABLE_BOOST_WORKAROUND )
-	INCLUDE_DIRECTORIES( BoostWorkaround )
-	ADD_DEFINITIONS( -DASSIMP_BUILD_BOOST_WORKAROUND )
-	MESSAGE( STATUS "Building a non-boost version of Assimp." )
-ELSE ( ENABLE_BOOST_WORKAROUND )
-	FIND_PACKAGE( Boost 1.35 )
+SET (boost_include_dirs "" CACHE STRING "Boost include paths. Use this to override automatic detection.")
+SET (boost_library_dirs "" CACHE STRING "Boost library paths. Use this to override automatic detection.")
+SET (boost_libraries "" CACHE STRING "Boost libraries. Use this to override automatic detection.")
 
-	IF ( NOT Boost_FOUND )
-		MESSAGE( FATAL_ERROR
-			"Boost libraries (http://www.boost.org/) not found. "
-			"You can build a non-boost version of Assimp with slightly reduced "
-			"functionality by specifying -DENABLE_BOOST_WORKAROUND=ON."
-		)
-	ENDIF ( NOT Boost_FOUND )
 
-	INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIRS} )
-ENDIF ( ENABLE_BOOST_WORKAROUND )
+message(status " debug: ${boost_include_dirs} ${boost_libraries}" )
+INCLUDE_DIRECTORIES( 
+       include
+       ${boost_include_dirs}
+)
 
+LINK_DIRECTORIES( 
+       ${boost_library_dirs}
+)
+
 ADD_SUBDIRECTORY( code/ )
 IF ( WIN32 )
 	ADD_SUBDIRECTORY( test/ )
